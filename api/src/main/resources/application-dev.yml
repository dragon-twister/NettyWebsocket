spring:
  datasource:
    druid:
      initial-size: 10
      max-active: 200
      min-idle: 10
      max-wait: 10000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      time-between-log-stats-millis: 60000
      web-stat-filter:
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
        profile-enable: true
      stat-view-servlet:
        allow:
        enabled: true
        reset-enable: false
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
    dynamic:
      primary: mysql1
      strict: false
      datasource:
        mysql1:
          url: jdbc:mysql://172.20.155.135:4000/xw_manage_test?useUnicode=true&autoReconnect=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
          username: xw_manage_user
          password: C1ReKUkdzFBdnRsQ
          driver-class-name: com.mysql.jdbc.Driver
  cache:
    type: REDIS
  redis:
    host: 172.20.154.227
    port: 7711
    database: 0
    password: 6AawynDaP4DY
    timeout: 1000
    # 单通道
    lettuce:
      shutdown-timeout: 200ms
      pool:
        max-active: 7
        max-idle: 7
        min-idle: 2
        max-wait: -1ms

feign:
  #是否开启熔断
  hystrix:
    enabled: true
  #使用okhttp
  okhttp:
    enabled: true

hystrix:
  # 这样将会自动配置一个 Hystrix 并发策略插件的 hook，这个 hook 会将 SecurityContext 从主线程传输到 Hystrix 的命令。
  # 因为 Hystrix 不允许注册多个 Hystrix 策略，所以可以声明 HystrixConcurrencyStrategy
  # 为一个 Spring bean 来实现扩展。Spring Cloud 会在 Spring 的上下文中查找你的实现，并将其包装在自己的插件中。
  shareSecurityContext: true
  command:
    default:
      circuitBreaker:
        # 当在配置时间窗口内达到此数量的失败后，进行短路。默认20个
        requestVolumeThreshold: 20
        # 触发短路的时间值，当该值设为5000时，则当触发 circuit break 后的5000毫秒内都会拒绝request
        # 也就是5000毫秒后才会关闭circuit。默认5000
        sleepWindowInMilliseconds: 5000
        # 强制打开熔断器，如果打开这个开关，那么拒绝所有request，默认false
        forceOpen: false
        # 强制关闭熔断器 如果这个开关打开，circuit将一直关闭且忽略，默认false
        forceClosed: false
      execution:
        isolation:
          thread:
            # 熔断器超时时间，默认：1000/毫秒
            timeoutInMilliseconds: 15000

miniProgram:
  sse:
    url: https://localhost:8003/sendToClient
  websocket:
    port: 8005
